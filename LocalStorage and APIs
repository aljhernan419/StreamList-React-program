import React, { useState, useEffect } from "react";
import { BrowserRouter as Router, Route, Routes, Link } from "react-router-dom";
import { FaEdit, FaTrash, FaCheck, FaSearch, FaCog, FaFilter, FaSort } from "react-icons/fa";
import "@fontsource/roboto";
import axios from "axios";

const StreamList = () => {
  const [input, setInput] = useState("");
  const [streams, setStreams] = useState([]);
  const [filter, setFilter] = useState("all");
  const [sortOrder, setSortOrder] = useState("asc");
  const [searchQuery, setSearchQuery] = useState("");
  const [settingsOpen, setSettingsOpen] = useState(false);

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!input.trim()) return;
    setStreams([...streams, { text: input, completed: false }]);
    setInput("");
  };

  const handleDelete = (index) => {
    setStreams(streams.filter((_, i) => i !== index));
  };

  const handleEdit = (index) => {
    const newText = prompt("Edit your entry:", streams[index].text);
    if (newText !== null) {
      setStreams(streams.map((stream, i) => (i === index ? { ...stream, text: newText } : stream)));
    }
  };

  const handleComplete = (index) => {
    setStreams(streams.map((stream, i) => (i === index ? { ...stream, completed: !stream.completed } : stream)));
  };

  const filteredStreams = streams.filter(stream => {
    if (filter === "completed") return stream.completed;
    if (filter === "pending") return !stream.completed;
    return true;
  }).filter(stream => stream.text.toLowerCase().includes(searchQuery.toLowerCase()));

  const sortedStreams = [...filteredStreams].sort((a, b) => {
    if (sortOrder === "asc") return a.text.localeCompare(b.text);
    return b.text.localeCompare(a.text);
  });

  return (
    <div className="container mx-auto p-4 font-roboto">
      <h1 className="text-3xl font-bold text-red-600 text-center mb-4">EZTech</h1>
      <h1 className="text-2xl font-bold">StreamList</h1>
      <div className="flex justify-between mb-4">
        <div className="flex space-x-2">
          <FaSearch className="text-blue-600 cursor-pointer" onClick={() => setSearchQuery("")} />
          <input
            type="text"
            placeholder="Search..."
            className="border p-2"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
          />
        </div>
        <FaCog className="text-blue-600 cursor-pointer" onClick={() => setSettingsOpen(!settingsOpen)} />
      </div>
      {settingsOpen && <div className="p-4 border mb-4">Settings Panel (Placeholder)</div>}
      <form onSubmit={handleSubmit} className="mb-4">
        <input
          type="text"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          className="border p-2 mr-2"
          placeholder="Enter a stream"
        />
        <button type="submit" className="bg-blue-500 text-white p-2 rounded">Add</button>
      </form>
      <ul>
        {sortedStreams.map((stream, index) => (
          <li key={index} className={flex justify-between p-2 border ${stream.completed ? "bg-green-200" : ""}}>
            <span className={stream.completed ? "line-through" : ""}>{stream.text}</span>
            <div>
              <button onClick={() => handleComplete(index)} className="mr-2 text-green-600"><FaCheck /></button>
              <button onClick={() => handleEdit(index)} className="mr-2 text-yellow-500"><FaEdit /></button>
              <button onClick={() => handleDelete(index)} className="text-red-600"><FaTrash /></button>
            </div>
          </li>
        ))}
      </ul>
    </div>
  );
};

const Movies = () => {
  const [movies, setMovies] = useState([]);

  useEffect(() => {
    axios.get(https://api.themoviedb.org/3/movie/popular?api_key=YOUR_TMDB_API_KEY)
      .then(response => setMovies(response.data.results))
      .catch(error => console.error("Error fetching data: ", error));
  }, []);

  return (
    <div className="container mx-auto p-4 font-roboto">
      <h1 className="text-2xl font-bold">Popular Movies</h1>
      <ul>
        {movies.map(movie => (
          <li key={movie.id} className="p-2 border-b">{movie.title}</li>
        ))}
      </ul>
    </div>
  );
};

const Navbar = () => (
  <nav className="bg-gray-800 p-4 text-white flex justify-around">
    <Link to="/">Home</Link>
    <Link to="/movies">Movies</Link>
    <Link to="/cart">Cart</Link>
    <Link to="/about">About</Link>
  </nav>
);

const App = () => {
  return (
    <Router>
      <Navbar />
      <Routes>
        <Route path="/" element={<StreamList />} />
        <Route path="/movies" element={<Movies />} />
      </Routes>
    </Router>
  );
};

export default App; 
