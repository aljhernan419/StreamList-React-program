{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuhama\\\\streamlist-app\\\\src\\\\components\\\\StreamList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StreamList() {\n  _s();\n  const [streams, setStreams] = useState([]);\n  const [streamName, setStreamName] = useState('');\n  const [streamGenre, setStreamGenre] = useState('');\n  useEffect(() => {\n    const storedStreams = JSON.parse(localStorage.getItem('streams')) || [];\n    setStreams(storedStreams);\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newStream = {\n      name: streamName,\n      genre: streamGenre,\n      completed: false\n    };\n    const updatedStreams = [...streams, newStream];\n    setStreams(updatedStreams);\n    localStorage.setItem('streams', JSON.stringify(updatedStreams));\n    setStreamName('');\n    setStreamGenre('');\n  };\n  const handleDelete = index => {\n    const updatedStreams = streams.filter((_, i) => i !== index);\n    setStreams(updatedStreams);\n    localStorage.setItem('streams', JSON.stringify(updatedStreams));\n  };\n  const handleToggleComplete = index => {\n    const updatedStreams = streams.map((stream, i) => i === index ? {\n      ...stream,\n      completed: !stream.completed\n    } : stream);\n    setStreams(updatedStreams);\n    localStorage.setItem('streams', JSON.stringify(updatedStreams));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stream-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stream List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Stream Name\",\n        value: streamName,\n        onChange: e => setStreamName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Genre\",\n        value: streamGenre,\n        onChange: e => setStreamGenre(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: streams.map((stream, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: stream.completed ? 'completed' : '',\n        children: [stream.name, \" - \", stream.genre, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleToggleComplete(index),\n          children: stream.completed ? 'Undo' : 'Complete'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(StreamList, \"zzNi+HRq5HJh2kAZ5o9CRz5kqSQ=\");\n_c = StreamList;\nexport default StreamList;\nvar _c;\n$RefreshReg$(_c, \"StreamList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StreamList","_s","streams","setStreams","streamName","setStreamName","streamGenre","setStreamGenre","storedStreams","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","newStream","name","genre","completed","updatedStreams","setItem","stringify","handleDelete","index","filter","_","i","handleToggleComplete","map","stream","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yuhama/streamlist-app/src/components/StreamList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction StreamList() {\r\n  const [streams, setStreams] = useState([]);\r\n  const [streamName, setStreamName] = useState('');\r\n  const [streamGenre, setStreamGenre] = useState('');\r\n\r\n  useEffect(() => {\r\n    const storedStreams = JSON.parse(localStorage.getItem('streams')) || [];\r\n    setStreams(storedStreams);\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newStream = { name: streamName, genre: streamGenre, completed: false };\r\n    const updatedStreams = [...streams, newStream];\r\n    setStreams(updatedStreams);\r\n    localStorage.setItem('streams', JSON.stringify(updatedStreams));\r\n    setStreamName('');\r\n    setStreamGenre('');\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const updatedStreams = streams.filter((_, i) => i !== index);\r\n    setStreams(updatedStreams);\r\n    localStorage.setItem('streams', JSON.stringify(updatedStreams));\r\n  };\r\n\r\n  const handleToggleComplete = (index) => {\r\n    const updatedStreams = streams.map((stream, i) =>\r\n      i === index ? { ...stream, completed: !stream.completed } : stream\r\n    );\r\n    setStreams(updatedStreams);\r\n    localStorage.setItem('streams', JSON.stringify(updatedStreams));\r\n  };\r\n\r\n  return (\r\n    <div className=\"stream-list\">\r\n      <h2>Stream List</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Stream Name\"\r\n          value={streamName}\r\n          onChange={(e) => setStreamName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Genre\"\r\n          value={streamGenre}\r\n          onChange={(e) => setStreamGenre(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Add Stream</button>\r\n      </form>\r\n      <ul>\r\n        {streams.map((stream, index) => (\r\n          <li key={index} className={stream.completed ? 'completed' : ''}>\r\n            {stream.name} - {stream.genre}\r\n            <button onClick={() => handleToggleComplete(index)}>\r\n              {stream.completed ? 'Undo' : 'Complete'}\r\n            </button>\r\n            <button onClick={() => handleDelete(index)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StreamList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE;IACvET,UAAU,CAACK,aAAa,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,SAAS,GAAG;MAAEC,IAAI,EAAEb,UAAU;MAAEc,KAAK,EAAEZ,WAAW;MAAEa,SAAS,EAAE;IAAM,CAAC;IAC5E,MAAMC,cAAc,GAAG,CAAC,GAAGlB,OAAO,EAAEc,SAAS,CAAC;IAC9Cb,UAAU,CAACiB,cAAc,CAAC;IAC1BT,YAAY,CAACU,OAAO,CAAC,SAAS,EAAEZ,IAAI,CAACa,SAAS,CAACF,cAAc,CAAC,CAAC;IAC/Df,aAAa,CAAC,EAAE,CAAC;IACjBE,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMgB,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMJ,cAAc,GAAGlB,OAAO,CAACuB,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC;IAC5DrB,UAAU,CAACiB,cAAc,CAAC;IAC1BT,YAAY,CAACU,OAAO,CAAC,SAAS,EAAEZ,IAAI,CAACa,SAAS,CAACF,cAAc,CAAC,CAAC;EACjE,CAAC;EAED,MAAMQ,oBAAoB,GAAIJ,KAAK,IAAK;IACtC,MAAMJ,cAAc,GAAGlB,OAAO,CAAC2B,GAAG,CAAC,CAACC,MAAM,EAAEH,CAAC,KAC3CA,CAAC,KAAKH,KAAK,GAAG;MAAE,GAAGM,MAAM;MAAEX,SAAS,EAAE,CAACW,MAAM,CAACX;IAAU,CAAC,GAAGW,MAC9D,CAAC;IACD3B,UAAU,CAACiB,cAAc,CAAC;IAC1BT,YAAY,CAACU,OAAO,CAAC,SAAS,EAAEZ,IAAI,CAACa,SAAS,CAACF,cAAc,CAAC,CAAC;EACjE,CAAC;EAED,oBACErB,OAAA;IAAKgC,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BjC,OAAA;MAAAiC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBrC,OAAA;MAAMsC,QAAQ,EAAExB,YAAa;MAAAmB,QAAA,gBAC3BjC,OAAA;QACEuC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBC,KAAK,EAAEpC,UAAW;QAClBqC,QAAQ,EAAG3B,CAAC,IAAKT,aAAa,CAACS,CAAC,CAAC4B,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFrC,OAAA;QACEuC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAElC,WAAY;QACnBmC,QAAQ,EAAG3B,CAAC,IAAKP,cAAc,CAACO,CAAC,CAAC4B,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACFrC,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACPrC,OAAA;MAAAiC,QAAA,EACG9B,OAAO,CAAC2B,GAAG,CAAC,CAACC,MAAM,EAAEN,KAAK,kBACzBzB,OAAA;QAAgBgC,SAAS,EAAED,MAAM,CAACX,SAAS,GAAG,WAAW,GAAG,EAAG;QAAAa,QAAA,GAC5DF,MAAM,CAACb,IAAI,EAAC,KAAG,EAACa,MAAM,CAACZ,KAAK,eAC7BnB,OAAA;UAAQ4C,OAAO,EAAEA,CAAA,KAAMf,oBAAoB,CAACJ,KAAK,CAAE;UAAAQ,QAAA,EAChDF,MAAM,CAACX,SAAS,GAAG,MAAM,GAAG;QAAU;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACTrC,OAAA;UAAQ4C,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACC,KAAK,CAAE;UAAAQ,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GALpDZ,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnC,EAAA,CAjEQD,UAAU;AAAA4C,EAAA,GAAV5C,UAAU;AAmEnB,eAAeA,UAAU;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}