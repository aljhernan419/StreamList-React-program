{"ast":null,"code":"// src/serviceWorker.js\n\n// This optional code is used to register a service worker.\n// It allows the app to work offline and load faster. However, it comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// This file is only needed if you want to make your app a PWA.\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' || window.location.hostname === '[::1]' || window.location.hostname.match(/^127(\\.[0-9]{1,3}){3}$/));\nexport function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL that points to the service worker script\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl);\n      } else {\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker.register(swUrl).then(registration => {\n    console.log('Service Worker registered: ', registration);\n  }).catch(error => {\n    console.error('Service Worker registration failed: ', error);\n  });\n}\nfunction checkValidServiceWorker(swUrl) {\n  fetch(swUrl).then(response => {\n    if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\n      // No service worker found. Most likely, this is a development build.\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    } else {\n      // Service worker found. Proceed with registration.\n      registerValidSW(swUrl);\n    }\n  }).catch(() => {\n    console.log('No internet connection found. App is running in offline mode.');\n  });\n}\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    }).catch(error => {\n      console.error(error.message);\n    });\n  }\n}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","process","env","NODE_ENV","navigator","publicUrl","URL","PUBLIC_URL","href","origin","addEventListener","swUrl","checkValidServiceWorker","registerValidSW","serviceWorker","then","registration","console","log","catch","error","fetch","response","status","headers","get","indexOf","ready","unregister","message"],"sources":["/Users/alejandrahernandez/Documents/GitHub/StreamList-React-program/src/serviceWorker.js"],"sourcesContent":["// src/serviceWorker.js\r\n\r\n// This optional code is used to register a service worker.\r\n// It allows the app to work offline and load faster. However, it comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n// This file is only needed if you want to make your app a PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(/^127(\\.[0-9]{1,3}){3}$/)\r\n  );\r\n  \r\n  export function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL that points to the service worker script\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          checkValidServiceWorker(swUrl);\r\n        } else {\r\n          registerValidSW(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        console.log('Service Worker registered: ', registration);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Service Worker registration failed: ', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    fetch(swUrl)\r\n      .then((response) => {\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Most likely, this is a development build.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister();\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed with registration.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  "],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CACvBC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IACxCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,OAAO,IACpCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,wBAAwB,CACzD,CAAC;AAED,OAAO,SAASC,QAAQA,CAAA,EAAG;EACzB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAI,eAAe,IAAIC,SAAS,EAAE;IACzE;IACA,MAAMC,SAAS,GAAG,IAAIC,GAAG,CAACL,OAAO,CAACC,GAAG,CAACK,UAAU,EAAEX,MAAM,CAACC,QAAQ,CAACW,IAAI,CAAC;IACvE,IAAIH,SAAS,CAACI,MAAM,KAAKb,MAAM,CAACC,QAAQ,CAACY,MAAM,EAAE;MAC/C;IACF;IAEAb,MAAM,CAACc,gBAAgB,CAAC,MAAM,EAAE,MAAM;MACpC,MAAMC,KAAK,GAAG,GAAGV,OAAO,CAACC,GAAG,CAACK,UAAU,oBAAoB;MAE3D,IAAIb,WAAW,EAAE;QACfkB,uBAAuB,CAACD,KAAK,CAAC;MAChC,CAAC,MAAM;QACLE,eAAe,CAACF,KAAK,CAAC;MACxB;IACF,CAAC,CAAC;EACJ;AACF;AAEA,SAASE,eAAeA,CAACF,KAAK,EAAE;EAC9BP,SAAS,CAACU,aAAa,CACpBd,QAAQ,CAACW,KAAK,CAAC,CACfI,IAAI,CAAEC,YAAY,IAAK;IACtBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,YAAY,CAAC;EAC1D,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;IAChBH,OAAO,CAACG,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;EAC9D,CAAC,CAAC;AACN;AAEA,SAASR,uBAAuBA,CAACD,KAAK,EAAE;EACtCU,KAAK,CAACV,KAAK,CAAC,CACTI,IAAI,CAAEO,QAAQ,IAAK;IAClB,IACEA,QAAQ,CAACC,MAAM,KAAK,GAAG,IACvBD,QAAQ,CAACE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EACjE;MACA;MACAtB,SAAS,CAACU,aAAa,CAACa,KAAK,CAACZ,IAAI,CAAEC,YAAY,IAAK;QACnDA,YAAY,CAACY,UAAU,CAAC,CAAC;MAC3B,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAf,eAAe,CAACF,KAAK,CAAC;IACxB;EACF,CAAC,CAAC,CACDQ,KAAK,CAAC,MAAM;IACXF,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC;EAC9E,CAAC,CAAC;AACN;AAEA,OAAO,SAASU,UAAUA,CAAA,EAAG;EAC3B,IAAI,eAAe,IAAIxB,SAAS,EAAE;IAChCA,SAAS,CAACU,aAAa,CAACa,KAAK,CAC1BZ,IAAI,CAAEC,YAAY,IAAK;MACtBA,YAAY,CAACY,UAAU,CAAC,CAAC;IAC3B,CAAC,CAAC,CACDT,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAACA,KAAK,CAACS,OAAO,CAAC;IAC9B,CAAC,CAAC;EACN;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}